#Projekat GIS Programiranje = Toplane na teritoriji gradskog naselja Beograd

from shapely.geometry import Point
import geopandas as gpd
from fiona.crs import from_epsg
import matplotlib.pyplot as plt

#Ubacivanje tacaka-koordinata, svaka tacka predstavlja jednu toplanu

toplana_miljakovac = Point(7457264, 4956249)
toplana_cerak = Point(7454151, 4954792)
toplana_banovo_brdo = Point(7454149, 4959597)
toplana_visnjicka_banja = Point(7463725, 4963451)
toplana_mirijevo = Point(7463540, 4960590)
toplana_dunav = Point(7458462, 4964893)
toplana_novi_beograd = Point(7453836, 4961861)
toplana_vozdovac= Point(7459817, 4956731)
toplana_konjarnik= Point(7461916, 4960250)
toplana_medakovic = Point(7460551, 4958996)
toplana_zemun = Point(7452338, 4966795)


#Provera tipa objekta
tip_tacke = type(toplana_miljakovac)
print(toplana_miljakovac)

#Kreiranje liste

lista = [(toplana_miljakovac, "Miljakovac"), (toplana_cerak,"Cerak"),( toplana_banovo_brdo,"Banovo Brdo"), (toplana_visnjicka_banja,"Visnjicka Banja"),
                (toplana_mirijevo,"Mirijevo"),(toplana_dunav,"Dunav"),(toplana_novi_beograd,"Novi Beograd"), (toplana_vozdovac,"Vozdovac"),
                (toplana_konjarnik,"Konjarnik"),( toplana_medakovic,"Medakovic"),(toplana_zemun,"Zemun")]


prostor= gpd.GeoDataFrame()
prostor['geometry'] = None

for ID, (tacka,naziv) in enumerate(lista):
    prostor.loc[ID, 'geometry'] = tacka
    prostor.loc[ID, 'Naziv toplane'] = naziv


#Ucitavanje i podesavanje koo. sistema (pravougle koordinate= epsg 6316)

prostor.crs = from_epsg(6316)
prostor.plot(facecolor='yellow');
plt.title("Toplane")
plt.show()

izlaz = r"D:\IKA FAKS\Master studije\FAKS\Drugi semestar\GIS programiranje\Projekat\Moj projekat\Shp\toplane.shp"

prostor.to_file(izlaz)


#Ubacivanje shp fajla- bg opstine i izracunavanje povrsine svake opstine

fp = r"D:\IKA FAKS\Master studije\FAKS\Drugi semestar\GIS programiranje\Projekat\Moj projekat\Shp\Bg_opstine.shp"


#Citanje fajla

prostor_poly = gpd.read_file(fp)
prostor_poly

#Provera trenutnog koordinatnog sistema

prostor_poly.crs
print(prostor_poly.crs)

prostor_poly['geometry'].head()
print(prostor_poly['geometry'].head())


#Preimenovanje atributa

prostor_poly = prostor_poly.rename(columns={'Naziv': 'Naziv opstine'})
prostor_poly.columns
print(prostor_poly)

#Dodat novi atribut povrsina za svaki red

prostor_poly ['area'] = None
for povrsina, row in prostor_poly .iterrows():
    prostor_poly .loc[povrsina, 'area'] = row['geometry'].area
print(prostor_poly ['area'].head())
print("Povrsine su jednake:", prostor_poly )


prostor_poly .crs = from_epsg(6316)
prostor_poly .crs
print(prostor_poly .crs)

izlaz2 = r"D:\IKA FAKS\Master studije\FAKS\Drugi semestar\GIS programiranje\Projekat\Moj projekat\Shp\Bg_opstine_novo.shp"
prostor_poly.to_file(izlaz2)


#Prikaz karte svih opstina

prostor_poly.plot(column='Naziv opstine', cmap='hsv');

#Dodavanje naslova

plt.title("Bg opstine");
plt.tight_layout()
plt.show()

#Racunanje rastojanja toplana na istoj opstini (vazdusnom linijom UTM u metrima)
#Po dve toplane nalaze se na opstinama Vozdovac, Zvezdara i Cukarica

distanca1= toplana_medakovic.distance(toplana_vozdovac)
print("Rastojane od toplane Medakovic do toplane Vozdovac je:", distanca1)

distanca2= toplana_konjarnik.distance(toplana_mirijevo)
print("Rastojane od toplane Konjarnik do toplane Mirijevo je:", distanca2)

distanca3= toplana_banovo_brdo.distance(toplana_cerak)
print("Rastojane od toplane Banovo Brdo do toplane Cerak je:", distanca3)


#Spajanje podataka samo kao prikaz
#Provera u kojem koordinatnom sistemu se nalaze podaci

print(prostor.crs)
print(prostor_poly.crs)
prostor.to_crs(prostor_poly.crs, inplace=True)


spojeno = prostor.geometry.append(prostor_poly.geometry)

print(spojeno.crs)
print(spojeno)


#Prikaz sve zajedno- Toplane na teritoriji gradskog naselja Beograd

spojeno.plot(cmap="hsv")
plt.title("Toplane na teritoriji gradskog naselja Beograd")
plt.show()












